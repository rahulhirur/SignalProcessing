
import plotly.graph_objects as go
from plotly.subplots import make_subplots

# create subplots
fig = make_subplots(rows=2, cols=2)

# add traces to the subplots
fig.add_trace(go.Scatter(x=[0, 1, 2, 3], y=[10, 11, 12, 13]), row=1, col=1)
fig.add_trace(go.Scatter(x=[0, 1, 2, 3], y=[20, 21, 22, 23]), row=1, col=2)
fig.add_trace(go.Scatter(x=[0, 1, 2, 3], y=[30, 31, 32, 33]), row=2, col=1)
fig.add_trace(go.Scatter(x=[0, 1, 2, 3], y=[40, 41, 42, 43]), row=2, col=2)

# define callback function to synchronize zoom levels
def sync_zoom(layout, x_range, y_range):
    for i in range(1, fig.layout.grid.rows+1):
        for j in range(1, fig.layout.grid.columns+1):
            if i != layout.row or j != layout.col:
                fig.update_xaxes(range=x_range, row=i, col=j)
                fig.update_yaxes(range=y_range, row=i, col=j)

# add callback to update other subplots when zoom changes in one subplot
fig.for_each_subplot(lambda s: s.layout.on_change(sync_zoom, 'xaxis.range', 'yaxis.range'))

# show figure
fig.show()

import plotly.graph_objects as go

# Create data
x = [1, 2, 3, 4, 5]
y1 = [1, 4, 9, 16, 25]
y2 = [1, 3, 5, 7, 9]
y3 = [2, 4, 6, 8, 10]
y4 = [10, 8, 6, 4, 2]

# Create subplots
fig = make_subplots(rows=2, cols=2)

# Add traces to subplots
fig.add_trace(go.Scatter(x=x, y=y1), row=1, col=1)
fig.add_trace(go.Scatter(x=x, y=y2), row=1, col=2)
fig.add_trace(go.Scatter(x=x, y=y3), row=2, col=1)
fig.add_trace(go.Scatter(x=x, y=y4), row=2, col=2)

# Define the callback function for zoom events
def zoom_event_handler(event_data):
    # Get the event data
    x_range = event_data["xaxis.range"]
    
    # Update the x-axis range for all subplots
    fig.update_xaxes(range=x_range)
    
# Bind the callback function to the zoom event for the first subplot
fig["data"][0]["xaxis"].relayout_event = zoom_event_handler

# Show the plot
fig.show()


import plotly.graph_objs as go

# Create data for subplots
x = [1, 2, 3, 4, 5]
y1 = [10, 20, 30, 40, 50]
y2 = [5, 10, 15, 20, 25]
y3 = [2, 4, 6, 8, 10]
y4 = [7, 14, 21, 28, 35]

# Create subplot figure with custom layout
fig = make_subplots(rows=2, cols=2, subplot_titles=("Subplot 1", "Subplot 2", "Subplot 3", "Subplot 4"), vertical_spacing=0.1)
fig.update_layout(height=600, width=800)

# Add traces to subplots
fig.add_trace(go.Scatter(x=x, y=y1, name="Line 1"), row=1, col=1)
fig.add_trace(go.Scatter(x=x, y=y2, name="Line 2"), row=1, col=2)
fig.add_trace(go.Scatter(x=x, y=y3, name="Line 3"), row=2, col=1)
fig.add_trace(go.Scatter(x=x, y=y4, name="Line 4"), row=2, col=2)

# Define callback function to update other subplots
def update_layout(fig, target_subplot):
    for i, subplot in enumerate(fig["layout"]["annotations"]):
        if i != target_subplot:
            subplot["xref"] = "x" + str(target_subplot + 1)
            subplot["yref"] = "y" + str(target_subplot + 1)
    return fig

# Add event listener to trigger callback on zoom
fig["layout"].on_change(update_layout, "xaxis.range")

# Show plot
fig.show()

